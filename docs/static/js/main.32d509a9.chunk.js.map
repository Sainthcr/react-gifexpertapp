{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGrindItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","event","target","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","getGifs","then","imgs","useFetchGifs","GifExpertApp","categories","item","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EAEbC,mBAAS,IAFI,mBAEvCC,EAFuC,KAE5BC,EAF4B,KAwB3C,OAII,sBAAMC,SAlBO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAqBO,OACvCN,EAAc,MAYX,SAEC,uBACDO,KAAK,OACLC,MAAST,EACTU,SA7BkB,SAACC,GAE1BV,EAAcU,EAAMC,OAAOH,a,+BCWbI,EArBD,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEPC,EAFO,iDAE0CC,UAAWH,GAFrD,+DAGMI,MAAMF,GAHZ,cAGPG,EAHO,gBAIQA,EAAKC,OAJb,uBAINC,EAJM,EAINA,KAIDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAM,CAEFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAd7B,kBAiBNM,GAjBM,4CAAH,sDCEDO,EAAc,SAAC,GAAmB,IAAlBJ,EAAiB,EAAjBA,GAAGC,EAAc,EAAdA,MAAMV,EAAQ,EAARA,IAIlC,OAFJc,QAAQC,IAAIN,EAAGC,EAAMV,GAIb,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCNHS,EAAU,SAAC,GAAc,IAAbrB,EAAY,EAAZA,SAAY,ECAT,SAACA,GAAa,IAAD,EAEjBf,mBAAS,CAE7BsB,KAAK,GACLe,SAAQ,IAL6B,mBAElCC,EAFkC,KAE5BC,EAF4B,KA2BzC,OAjBIC,qBAAW,WACPC,EAAQ1B,GACP2B,MAAK,SAAAC,GAGEJ,EAAS,CACTjB,KAAMqB,EACNN,SAAQ,SAKlB,CAACtB,IAKAuB,EDxBuBM,CAAa7B,GAA/Ba,EAHyB,EAG9BN,KAAYe,EAHkB,EAGlBA,QAEf,OACI,qCAEA,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAY,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAMIL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEaVmB,EAhCO,WAAM,IAAD,EAGS7C,mBAAS,CAAC,cAHnB,mBAGjB8C,EAHiB,KAGN/C,EAHM,KAK3B,OACA,qCAEC,gDACD,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAIA+C,EAAWtB,KAAI,SAAAuB,GAAI,OAEnB,cAAE,EAAF,CAEIhC,SAAWgC,GADNA,Y,MCnBTC,IAASC,OACL,cAAC,EAAD,IACHC,SAASC,eAAe,W","file":"static/js/main.32d509a9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\n\n\nexport const AddCategory = ({setCategories}) =>{\n\nconst [ inputValue,setInputValue]=useState('');\n\nconst handleInputChange = (event)=>{\n\n setInputValue(event.target.value);\n\n}\n\nconst handleSubmit = (e) =>{\n    e.preventDefault();\n    \n    if(inputValue.trim().length > 2){\n    \n     setCategories(cats => [inputValue , ...cats]);\n     setInputValue('');\n\n\n    }\n    \n}\n\n\n    return(\n\n       \n\n        <form onSubmit= {handleSubmit }>\n\n         <input\n        type='text' \n        value = {inputValue}\n        onChange = {handleInputChange}\n    />\n\n        </form>\n       \n\n    \n\n    )\n\n\n}\n\nAddCategory.propTypes={\n\nsetCategories:PropTypes.func.isRequired\n}\n"," const getGift = async(category)=>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=YOyzjhxmidpNHTIApbIklhiqUkJoAhy1`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    \n\n\n    const gifs = data.map( img => {\n\n        return{\n\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n\n}\n\nexport default getGift;","import React from 'react';\n\nexport const GifGridItem = ({id,title,url}) =>{\n\nconsole.log(id,title,url);\n\n    return(\n\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n\n\n    )\n\n\n}","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGrindItem';\n\nexport const GifGrid = ({category})=>{\n    \n    \nconst {data:images,loading} = useFetchGifs(category);\n\n    return(\n        <> \n        \n        <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n        {loading &&  <p className='animate__animated animate__flash'>Loading</p>}\n        \n        <div className=\"card-grid\"> \n\n        \n\n        {\n            \n            images.map( img =>(\n                <GifGridItem \n                key={img.id}\n                {...img} \n                />\n                \n                ))\n            }\n\n        \n        </div>\n            </>\n     )\n\n}","import { useEffect, useState } from \"react\";\nimport getGifs from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) =>{\n\nconst [state,setState] =useState({\n\n    data:[],\n    loading:true\n});\n\n\n\n    useEffect( ()=>{\n        getGifs(category)\n        .then(imgs =>{\n\n            \n                setState({\n                data: imgs,\n                loading:false\n            });\n           \n                \n        })\n    },[category])\n\n\n\n\nreturn state;\n\n}","import React, { useState } from \"react\"; \nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\n const GifExpertApp = () =>{\n\n\n  const [ categories,setCategories]=useState(['One Punch']);\n\nreturn(  \n<>\n\n <h2> GifExpertApp </h2>\n<AddCategory setCategories={setCategories}/>\n\n<hr/>\n\n<ol>\n\n{\n\ncategories.map(item  => (\n\n< GifGrid \n    key={item}\n    category={ item}/>\n\n))\n\n}\n\n</ol>\n</>\n)\n}\n\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  GifExpertApp  from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n document.getElementById('root')\n);\n"],"sourceRoot":""}